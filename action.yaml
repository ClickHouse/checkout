name: Checkouter
description: 'Checkout the repository'
inputs:
  clear-repository:
    description: If the repository should be cleaned up before checkout
    required: true
    default: false
  fetch-depth:
    description: The value is passed as is to the upstream checkout action
    required: true
    default: 1
  ref:
    description: The value is passed as is to the upstream checkout action
  submodules:
    description: Defines if submodules should be fetched
    required: true
    default: false
  submodules-depth:
    description: The depth of submodules to checkout
    required: true
    default: 1
  token:
    description: The value is passed as is to the upstream checkout action
    required: true
    default: ${{ github.token }}
  filter:
    description: The value is passed as is to the upstream checkout action
    required: false
  submodule-retries:
    description: The number of attempts to checkout submodules on errors
    default: 3
runs:
  using: "composite"
  steps:
    - name: Clear repository
      if: ${{ fromJSON(inputs.clear-repository) }}
      shell: bash
      run: |
        sudo rm -fr "$GITHUB_WORKSPACE" && mkdir "$GITHUB_WORKSPACE"
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        fetch-depth: ${{ inputs.fetch-depth }}
        ref: ${{ inputs.ref }}
        token: ${{ inputs.token }}
        path: ${{ inputs.path }}
        filter: ${{ inputs.filter }}
    - name: Checkout submodules
      if: ${{ fromJSON(inputs.submodules) }}
      shell: bash
      run: |
        echo '::group::Check out submodules'
        git -C "$GITHUB_WORKSPACE" submodule sync
        git -C "$GITHUB_WORKSPACE" submodule init
        git config --file "$GITHUB_WORKSPACE/.gitmodules" --null --get-regexp path | \
          sed -z 's|.*\n||' > "$RUNNER_TEMP"/submodules-to-checkout
        RETRY=1
        while ! xargs --max-procs=$(nproc --all) --null --no-run-if-empty \
          --max-args=1 git -C "$GITHUB_WORKSPACE" submodule update \
          --depth="${{ inputs.submodules-depth }}" --single-branch \
          < "$RUNNER_TEMP"/submodules-to-checkout
        do
            if (( ++RETRY > '${{ inputs.submodule-retries }}' )); then
                echo "Checkout submodules failed '${{ inputs.submodule-retries }}' times, abort the checkout"
                rm -f "$RUNNER_TEMP"/submodules-to-checkout
                exit 1
            fi
        done
        rm -f "$RUNNER_TEMP"/submodules-to-checkout
        echo '::endgroup::'
